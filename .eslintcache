[{"C:\\Users\\Brian\\calendario_sisteres\\src\\App.tsx":"1","C:\\Users\\Brian\\calendario_sisteres\\src\\redux\\reducers\\GeneralReducer.ts":"2","C:\\Users\\Brian\\calendario_sisteres\\src\\reportWebVitals.js":"3","C:\\Users\\Brian\\calendario_sisteres\\src\\pages\\Calendar.tsx":"4","C:\\Users\\Brian\\calendario_sisteres\\src\\index.js":"5","C:\\Users\\Brian\\calendario_sisteres\\src\\redux\\store.ts":"6"},{"size":604,"mtime":1606368749481,"results":"7","hashOfConfig":"8"},{"size":203,"mtime":1606360403301,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606182173315,"results":"10","hashOfConfig":"8"},{"size":3940,"mtime":1606368995636,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1606182173315,"results":"12","hashOfConfig":"8"},{"size":190,"mtime":1606359322973,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7lb19o",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Brian\\calendario_sisteres\\src\\App.tsx",[],"C:\\Users\\Brian\\calendario_sisteres\\src\\redux\\reducers\\GeneralReducer.ts",[],"C:\\Users\\Brian\\calendario_sisteres\\src\\reportWebVitals.js",[],["28","29"],"C:\\Users\\Brian\\calendario_sisteres\\src\\pages\\Calendar.tsx",["30","31","32"],"import React from 'react'\r\n// @ts-ignore\r\nimport moment from 'moment/min/moment-with-locales.min'\r\nimport \"./Calendar.sass\"\r\nimport {Moment} from \"moment\";\r\nimport {Almoco} from \"../DAOs/AlmocoDAO\";\r\n\r\nconst Calendar = ({app} : {app: Realm.App}) => {\r\n    const weekDays = [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"]\r\n    const wks = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\n    const [weeks, setWeeks] = React.useState({1: [], 2: [], 3: [], 4: [], 5: []});\r\n    const [currentMonth, setCurrentMonth] = React.useState(moment(new Date()).add(1, 'month'));\r\n    const [almocos, setAlmocos] = React.useState<any>([])\r\n\r\n    React.useEffect(() => {\r\n        let weeksAux = {...weeks};\r\n        for (let j = 1; j < 6; j++) {\r\n            const week = [];\r\n            let x = moment(new Date()).add(1, 'month').startOf('month').startOf('week').add(j - 1, 'weeks');\r\n            for (let i = 0; i < 7; i++) {\r\n                // @ts-ignore\r\n                week.push(moment(x));\r\n                x.add(1, 'days');\r\n            }\r\n            weeksAux[j+\"\"] = week;\r\n        }\r\n        setWeeks(weeksAux);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n\r\n        app.currentUser?.callFunction(\"getAlmocos\").then(result => {\r\n            setAlmocos(result)\r\n        });\r\n    }, [])\r\n\r\n    const getAlmocoFromThatDay = (day : Moment, almocos : Array<Almoco>) : Almoco | null => {\r\n        for (let almoco of almocos) {\r\n            if (day.isSame(new Date(almoco.dia), 'day')) {\r\n                return almoco;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Calendário de Almoço</h1>\r\n            <p> Mês de {moment(new Date()).locale('pt-BR').add(1, 'month').format('MMMM')} - <i>Ala Guarany</i></p>\r\n            <table className={'calendar_table'}>\r\n                <thead>\r\n                {weekDays.map((weekday) => (<td key={weekday}>{weekday}</td>))}\r\n                </thead>\r\n                <tbody>\r\n                {wks.map(wk => (\r\n                    <tr>\r\n                        {weeks[wk].map((day: Moment) =>\r\n                            (<td\r\n                                className={day.isSame(currentMonth, 'month') ? '' : 'not_month'}\r\n                                onClick={() => {\r\n                                    let nome = prompt(\"Informe o nome da Família\");\r\n                                    if (nome && nome !== '') {\r\n                                        let telefone = prompt(\"Informe um Telefone para Contato\");\r\n                                        // setAlmocos([...almocos, ])\r\n                                        const almoco = {\r\n                                            nome: nome,\r\n                                            telefone: telefone,\r\n                                            dia: day.add(3, 'hours').toDate()\r\n                                        }\r\n                                        app.currentUser?.callFunction(\"insertAlmoco\", almoco).then(res => {\r\n                                            console.log(\"Adicionado com sucesso\", res);\r\n                                            app.currentUser?.callFunction(\"getAlmocos\").then(res => {\r\n                                                setAlmocos(res)\r\n                                            })\r\n                                        })\r\n\r\n                                    }\r\n                                }}\r\n                                key={day.format('DD/MM')}>\r\n                                {day.format('DD')}\r\n                                <p><b>{getAlmocoFromThatDay(day, almocos)?.nome}</b></p>\r\n                                <p><i>{getAlmocoFromThatDay(day, almocos)?.telefone}</i></p>\r\n                            </td>))}\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nCalendar.propTypes = {}\r\n\r\nexport default Calendar","C:\\Users\\Brian\\calendario_sisteres\\src\\index.js",[],"C:\\Users\\Brian\\calendario_sisteres\\src\\redux\\store.ts",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":26,"nodeType":"39","messageId":"40","endLine":13,"endColumn":41},{"ruleId":"41","severity":1,"message":"42","line":29,"column":8,"nodeType":"43","endLine":29,"endColumn":10,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":36,"column":8,"nodeType":"43","endLine":36,"endColumn":10,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'setCurrentMonth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'weeks'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook React.useEffect has a missing dependency: 'app.currentUser'. Either include it or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [weeks]",{"range":"55","text":"56"},"Update the dependencies array to be: [app.currentUser]",{"range":"57","text":"58"},[1123,1125],"[weeks]",[1284,1286],"[app.currentUser]"]